diff --git a/base/metrics/persistent_memory_allocator.cc b/base/metrics/persistent_memory_allocator.cc
index b46dcfa..db16f6f 100644
--- a/base/metrics/persistent_memory_allocator.cc
+++ b/base/metrics/persistent_memory_allocator.cc
@@ -342,10 +342,12 @@ PersistentMemoryAllocator::PersistentMemoryAllocator(Memory memory,
 
   // These atomics operate inter-process and so must be lock-free. The local
   // casts are to make sure it can be evaluated at compile time to a constant.
+#if !defined(OS_LINUX) || defined(OS_CHROMEOS) || !defined(ARCH_CPU_ARM_FAMILY)
   CHECK(((SharedMetadata*)0)->freeptr.is_lock_free());
   CHECK(((SharedMetadata*)0)->flags.is_lock_free());
   CHECK(((BlockHeader*)0)->next.is_lock_free());
   CHECK(corrupt_.is_lock_free());
+#endif
 
   if (shared_meta()->cookie != kGlobalCookie) {
     if (readonly) {
diff --git a/build/linux/dump_app_syms.py b/build/linux/dump_app_syms.py
index 12e693e..11d3be1 100644
--- a/build/linux/dump_app_syms.py
+++ b/build/linux/dump_app_syms.py
@@ -25,5 +25,8 @@ if not os.path.isfile(outfile) or \
   with open(outfile, 'w') as outfileobj:
     subprocess.check_call([dumpsyms, infile], stdout=outfileobj)
 
+if strip_binary == '1':
+  strip_binary = 'strip'
+
 if strip_binary != '0':
-  subprocess.check_call(['strip', infile])
+  subprocess.check_call([strip_binary, infile])
